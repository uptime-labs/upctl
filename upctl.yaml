---
# This is the configuration file for the upctl command line tool.
# The file is in YAML format.

# repositories is a list of Helm repositories to add to the local Helm
# installation. The repositories are added before any packages are installed.
# The name is the name of the repository, and the url is the URL of the
# repository.

# The username and password are optional. If specified, the username and
# password are used to authenticate with the repository.
# The password should be a base64 encoded string.
repositories:
  - name: grafana
    url: https://grafana.github.io/helm-charts

# packages is a list of Helm packages to install. The name is the name of the
# package, and the repo is the name of the repository to install the package
# from. The namespace is the namespace to install the package into. If the
# namespace does not exist, it will be created. If the namespace is not
# specified, the package will be installed into the default namespace.
packages:
  - name: loki
    repo: grafana/loki
    namespace: loki
    override: loki.yaml

# overrides is a directory containing override files for packages.
# package overrides are applied before the package is installed.
# The name of the override file must match the name of the package.
# The override file is a YAML file containing the values to override.
# The values are merged with the default values of the package.
overrides: ~/.upctl

# teleport is the configuration for the Teleport client.
# The host is the address of the Teleport server.
# The aws_app is the name of the AWS application to use for AWS credentials.
# The aws_role is the name of the AWS role to assume.
teleport:
  host: teleport.example.com
  aws_app: app
  aws_role: role

# kube_context is the name of the Kubernetes context to use.
kube_context: colima
# kube_config is the path to the kubeconfig file to use.
kube_config: ~/.kube/config

# docker_config is the configuration for the Docker pull secret.
# The name is the name of the secret.
# The registry is the name of the registry to authenticate with.
# The username is the username to authenticate with.
# The password is the password to authenticate with.
# The use_teleport is a boolean indicating whether to use Teleport to
# authenticate with the registry.
# The namespaces are a list of namespaces to add the secret to.
docker_config:
  name: regcred
  registry: registry.example.com
  username: AWS
  aws_app: apps
  #password: ""
  use_teleport: true
  namespaces:
    - default

# mysql is the configuration for the MySQL database.
# The host is the address of the MySQL server.
# The database is the name of the database import data into.
# The user is the username to use to connect to the database.
# The password is the password to use to connect to the database.
# The port is the port to use to connect to the database.
# The db_file is the path to the database dump file.
# The s3_bucket is the name of the S3 bucket to download the database dump from.
# The s3_key is the name of the S3 key to download the database dump from.
# The s3_region is the region of the S3 bucket.
mysql:
  # needs to be set to the local ip of the machine or service IP of the mysql kube service
  # kubectl get svc -n mysql and get the loadbalancer ip
  host: 127.0.0.1
  database: db
  user: user
  password: pwd
  port: 3307
  db_file: /tmp/dump.sql
  s3_bucket: backups
  s3_key: dump.sql
  s3_region: us-east-1

# docker_compose is the configuration for the Docker Compose functionality
# It defines the services and configurations to be used with docker-compose
docker_compose:
  services:
    # Loki for log aggregation
    loki:
      container_name: upctl_loki
      image: grafana/loki:latest
      ports:
        - "3100:3100"
      volumes:
        - upctl_loki-data:/loki
      command: -config.file=/etc/loki/local-config.yaml
      restart: unless-stopped
      networks:
        - upctl_network
      environment:
        - TZ=UTC
      labels:
        service: "loki"
        
    # Grafana for visualization
    grafana:
      container_name: upctl_grafana
      image: grafana/grafana:latest
      ports:
        - "3000:3000"
      volumes:
        - upctl_grafana-data:/var/lib/grafana
      restart: unless-stopped
      networks:
        - upctl_network
      environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
        - GF_USERS_ALLOW_SIGN_UP=false
        - GF_INSTALL_PLUGINS=grafana-piechart-panel
      depends_on:
        - loki
      labels:
        service: "grafana"
        
    # Prometheus for metrics
    prometheus:
      container_name: upctl_prometheus
      image: prom/prometheus:latest
      ports:
        - "9090:9090"
      volumes:
        - upctl_prometheus-data:/prometheus
      restart: unless-stopped
      networks:
        - upctl_network
      command:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
      labels:
        service: "prometheus"
        
    # MySQL database
    mysql:
      container_name: upctl_mysql
      image: mysql:8.0
      ports:
        - "3307:3306"
      volumes:
        - upctl_mysql-data:/var/lib/mysql
      restart: unless-stopped
      networks:
        - upctl_network
      environment:
        - MYSQL_ROOT_PASSWORD=rootpassword
        - MYSQL_DATABASE=db
        - MYSQL_USER=user
        - MYSQL_PASSWORD=pwd
      labels:
        service: "mysql"

  volumes:
    upctl_loki-data:
      driver: local
    upctl_grafana-data:
      driver: local
    upctl_prometheus-data:
      driver: local
    upctl_mysql-data:
      driver: local

  networks:
    upctl_network:
      driver: bridge
